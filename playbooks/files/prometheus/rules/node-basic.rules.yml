# vim:ts=2:sw=2:et:ai:sts=2
---
groups:
  - name: Basic node rules
    rules:
      # RAM
      - record: instance:node_memory_MemTotal_bytes:sum
        expr: node_memory_MemTotal_bytes{job="node"}
      - record: instance:node_memory_MemFree_bytes:sum
        expr: node_memory_MemFree_bytes{job="node"}
      - record: instance:node_memory_MemUsed_bytes:sum
        expr: |
          node_memory_MemTotal_bytes{job="node"} -
          node_memory_MemFree_bytes{job="node"} -
          node_memory_Buffers_bytes{job="node"} -
          node_memory_Cached_bytes{job="node"}
      - record:
          instance:node_memory_MemUsed_bytes_per_node_memory_MemTotal_bytes:ratio
        expr: |
          instance:node_memory_MemUsed_bytes:sum{job="node"}
          /
          instance:node_memory_MemTotal_bytes:sum{job="node"}
      # CPU
      - record: instance:node_cpu_seconds_total:rate5m
        expr: rate(node_cpu_seconds_total{job="node"}[5m])
      - record: instance:node_cpu_seconds_total:avg_rate5m
        # Average over all CPUs in an instance.
        expr: |
          avg (
            rate (
              node_cpu_seconds_total{job="node"}[5m]
            )
          ) without (cpu)
      # Network
      - record: instance:node_network_receive_bytes_total:rate5m
        expr: rate(node_network_receive_bytes_total{job="node"}[5m])
      - record: instance:node_network_receive_drop_total:rate5m
        expr: rate(node_network_receive_drop_total{job="node"}[5m])
      - record: instance:node_network_receive_errs_total:rate5m
        expr: rate(node_network_receive_errs_total{job="node"}[5m])
      - record: instance:node_network_receive_packets_total:rate5m
        expr: rate(node_network_receive_packets_total{job="node"}[5m])
      - record: instance:node_network_transmit_bytes_total:rate5m
        expr: rate(node_network_transmit_bytes_total{job="node"}[5m])
      - record: instance:node_network_transmit_drop_total:rate5m
        expr: rate(node_network_transmit_drop_total{job="node"}[5m])
      - record: instance:node_network_transmit_errs_total:rate5m
        expr: rate(node_network_transmit_errs_total{job="node"}[5m])
      - record: instance:node_network_transmit_packets_total:rate5m
        expr: rate(node_network_transmit_packets_total{job="node"}[5m])
      # Disk IO
      - record: instance:node_disk_io_time_seconds_total:rate5m
        expr: rate(node_disk_io_time_seconds_total{job="node"}[5m])
      - record: instance:node_disk_read_bytes_total:rate5m
        expr: rate(node_disk_read_bytes_total{job="node"}[5m])
      - record: instance:node_disk_written_bytes_total:rate5m
        expr: rate(node_disk_written_bytes_total{job="node"}[5m])
      # FileSystem
      - record: instance:node_filesystem_avail_bytes:sum
        expr: node_filesystem_avail_bytes{job="node"}
      - record: instance:node_filesystem_free_bytes:sum
        expr: node_filesystem_free_bytes{job="node"}
      - record: instance:node_filesystem_size_bytes:sum
        expr: node_filesystem_size_bytes{job="node"}
      - record:
          instance:node_filesystem_avail_bytes_per_node_filesystem_size_bytes:ratio
        expr: |
          node_filesystem_avail_bytes{job="node"}
          /
          node_filesystem_size_bytes{job="node"}
      - record:
          instance:node_filesystem_free_bytes_per_node_filesystem_size_bytes:ratio
        expr: |
          node_filesystem_free_bytes{job="node"}
          /
          node_filesystem_size_bytes{job="node"}
      - record: instance:node_filesystem_files:sum
        expr: node_filesystem_files{job="node"}
      - record: instance:node_filesystem_files_free:sum
        expr: node_filesystem_files_free{job="node"}
      - record:
          instance:node_filesystem_files_free_per_node_filesystem_files:ratio
        expr: |
          node_filesystem_files_free{job="node"}
          /
          node_filesystem_files{job="node"}
