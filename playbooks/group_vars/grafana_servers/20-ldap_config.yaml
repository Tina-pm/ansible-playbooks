# vim:ts=2:sw=2:et:ai:sts=2
---

# Use LDAP if GLAuth is enabled.
_grafana_use_ldap: "{{ glauth__enable | d() | bool }}"
# Avoid errors.
_grafana_ldap_svc: "{{ (glauth__service_ldap | d()) or {} }}"
_grafana_ldaps_svc: "{{ (glauth__service_ldaps | d()) or {} }}"
# Use LDAPs if available.
_grafana_ldap_use_ldaps: "{{ _grafana_ldaps_svc.get('enabled') }}"
# Find bind address.
_grafana_ldap_listen: |-
  {{
    (
      _grafana_ldaps_svc if _grafana_ldap_use_ldaps else
      _grafana_ldap_svc
    ).get('listen') |
    mandatory(msg='Missing listen parameter in GLAuth configuration')
  }}
grafana_ldap__servers__host: "{{ _grafana_ldap_listen.split(':')[0] }}"
grafana_ldap__servers__port: "{{ _grafana_ldap_listen.split(':')[1] }}"
grafana_ldap__servers__use_ssl: "{{ _grafana_ldap_use_ldaps }}"
grafana_ldap__servers__start_tls: |-
  {{ not _grafana_ldap_use_ldaps or _grafana_ldap_svc.get('tls') }}
grafana_ldap__servers__ssl_skip_verify: 'false'
grafana_ldap__servers__bind_dn: "cn=grafana,
                                  dc={{ host_fqdn.split('.')[-3] }},
                                  dc={{ host_fqdn.split('.')[-2] }},
                                  dc={{ host_fqdn.split('.')[-1] }}"
grafana_ldap__servers__password:
grafana_ldap__servers__search_filter:
grafana_ldap__servers__base_dns:
grafana_ldap__servers_atributes__name: "givenName"
grafana_ldap__servers_atributes__surname: "sn"
grafana_ldap__servers_atributes__username: "cn"
grafana_ldap__servers_atributes__member_of: "memberOf"
grafana_ldap__servers_atributes__email: "mail"
grafana_ldap__servers_group_mappings:
  - group_dn: "cn=admins,ou=groups,dc=grafana,dc=org"
    org_role: "Admin"
  - group_dn: "cn=users,ou=groups,dc=grafana,dc=org"
    org_role: "Editor"
  - group_dn: "*"
    org_role: "Viewer"
