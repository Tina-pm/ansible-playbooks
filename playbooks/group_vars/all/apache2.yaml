# vim:ts=2:sw=2:et:ai:sts=2
---
# =============================================================================
# Reusable defaults and templates for apache2 role.
# =============================================================================

apache2__enable: false
apache2__install_ferm_svc: '{{ ferm__enable | bool }}'
apache2__listen_http__base: [80]
apache2__listen_https__base: []
apache2__logdirs__base:
  - /var/log/apache2

# Configurable settings for these templates.
# -----------------------------------------------------------------------------

# Enable the `SSL` module.
apache2__use_ssl: '{{ apache2__use_md or dehydrated__enable }}'
# Enable the `MD` module for automatic SSL certificate creation.
apache2__use_md: false

# Enable and configure the default SSL site.
apache2__default_ssl_enable: '{{ apache2__use_ssl }}'
# Use `MD` for the default SSL site.
apache2__default_ssl_uses_md: '{{ apache2__use_md }}'
# Certificate directory for the default SSL site (when not using `MD`).
apache2__default_ssl_cert_path: |-
  {{ '%s/%s' % (dehydrated__cert_path, host_fqdn) }}
# Force HTTPS redirects in the default site.
apache2__default_site_force_ssl: '{{ apache2__default_ssl_enable }}'

# Rewrite request IPs when received from a reverse proxy using one of these
# addresses.
apache2__remoteip_from_proxies: []

# Generated templates
# -----------------------------------------------------------------------------

apache2__mods__base:
  rewrite:
    state: |-
      {{ 'enabled' if apache2__default_site_force_ssl else 'present' }}

apache2__sites__base:
  000-default:
    state: enabled
    src: |
      <VirtualHost *:80>
        ServerAdmin webmaster@{{ domain_name }}
        DocumentRoot /var/www/html

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

      {% if apache2__default_site_force_ssl %}
        RewriteEngine On
      {% if dehydrated__enable %}
        RewriteRule ^/.well-known/acme-challenge/.* - [L]
      {% endif %}
        RewriteCond %{HTTPS} off
        RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
      {% endif %}
      </VirtualHost>

apache2__listen_https__ssl: '{{ [443] if apache2__use_ssl else [] }}'

apache2__mods__ssl:
  md:
    state: |-
      {{ 'enabled' if apache2__use_ssl and apache2__use_md else 'present' }}
  ssl:
    state: |-
      {{ 'enabled' if apache2__use_ssl else 'present' }}

apache2__conf__ssl:
  dehydrated:
    # Part of dehydrated-apache2 package.
    state: |-
      {{ 'enabled' if dehydrated__enable else 'present' }}
  md:
    state: |-
      {{ 'enabled' if apache2__use_ssl and apache2__use_md else 'absent' }}
    src: |
      MDCertificateAgreement accepted

apache2__sites__ssl:
  001-default-ssl:
    state: |-
      {{
        'enabled' if apache2__use_ssl and apache2__default_ssl_enable else
        'absent'
      }}
    src: |
      {% if apache2__default_ssl_uses_md %}
      MDomain {{ host_fqdn }}
      {% endif %}

      <VirtualHost *:443>
        ServerName {{ host_fqdn }}
        ServerAdmin webmaster@{{ domain_name }}
        DocumentRoot /var/www/html

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        SSLEngine On
      {% if not apache2__default_ssl_uses_md %}
        SSLCertificateFile      {{ apache2__default_ssl_cert_path }}/cert.pem
        SSLCertificateKeyFile   {{ apache2__default_ssl_cert_path }}/privkey.pem
        SSLCertificateChainFile {{ apache2__default_ssl_cert_path }}/chain.pem
      {% endif %}
      </VirtualHost>

apache2__mods__remoteip:
  remoteip:
    state: |-
      {{ 'enabled' if apache2__remoteip_from_proxies else 'present' }}

apache2__conf__remoteip:
  # Configuration to get the client IP from the X-Forwarded-For header.
  reverse_proxy:
    state: |-
      {{ 'enabled' if apache2__remoteip_from_proxies else 'absent' }}
    src: |
      {% set vhost_combined_fmt =
        '%v:%p %a %l %u %t "%r" %>s %O "%{Referer}i" "%{User-Agent}i"' %}
      {% set combined_fmt =
        '%a %l %u %t "%r" %>s %O "%{Referer}i" "%{User-Agent}i"' %}
      {% set common_fmt = '%a %l %u %t "%r" %>s %O' %}
      <IfModule mod_remoteip.c>
        RemoteIPHeader X-Forwarded-For
      {% for addr in apache2__remoteip_from_proxies %}
        RemoteIPInternalProxy {{ addr }}
      {% endfor %}

        LogFormat {{ vhost_combined_fmt | to_json }} vhost_combined
        LogFormat {{ combined_fmt | to_json }} combined
        LogFormat {{ common_fmt | to_json }} common
      </IfModule>

# Agregation of custom configuration using var prefixes
# -----------------------------------------------------------------------------

apache2__listen_http: |-
  {{
    query('vars',
      *(query('varnames', '^apache2__listen_http__.*') | sort)
    ) | sum(start=[])
  }}

apache2__listen_https: |-
  {{
    query('vars',
      *(query('varnames', '^apache2__listen_https__.*') | sort)
    ) | sum(start=[])
  }}

apache2__mods: |-
  {{
    {} | combine(
      *query('vars',
        *(query('varnames', '^apache2__mods__.*') | sort)
      )
    )
  }}

apache2__conf: |-
  {{
    {} | combine(
      *query('vars',
        *(query('varnames', '^apache2__conf__.*') | sort)
      )
    )
  }}

apache2__sites: |-
  {{
    {} | combine(
      *query('vars',
        *(query('varnames', '^apache2__sites__.*') | sort)
      )
    )
  }}

apache2__logdirs: |-
  {{
    query('vars',
      *(query('varnames', '^apache2__logdirs__.*') | sort)
    ) | sum(start=[])
  }}
