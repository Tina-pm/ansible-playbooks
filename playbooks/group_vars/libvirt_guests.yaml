# vim:ts=2:sw=2:et:ai:sts=2
---
# =============================================================================
# Reusable defaults for libvirt guests.
# =============================================================================

# Connect using QEMU guest agent.
libvirt__vm_use_qemu_connection: true
ansible_connection: |-
  {{
    'community.libvirt.libvirt_qemu' if
    libvirt__vm_use_qemu_connection | bool else
    'ansible.builtin.ssh'
  }}
ansible_libvirt_uri: |-
  qemu+ssh://{{
    hostvars[vm_host].get('ansible_ssh_host') or
    hostvars[vm_host].get('ansible_host') or
    hostvars[vm_host].get('inventory_hostname')
  }}/system
ansible_host: |-
  {{ vm_name if libvirt__vm_use_qemu_connection | bool else host_fqdn }}

bootstrap__install_packages__libvirt:
  - ifupdown
  - openssh-server
  - qemu-guest-agent  # Needed for ansible/libvirt connection.

# VM definition parameters.
vm_name: '{{ inventory_hostname_short }}'
vm_default_params:
  memory_mb: 1024
  vcpus: 1
  autostart: true
vm_params: {}

# Discover custom configurations using var prefixes
# (e.g. vm_volume__root).
vm_volumes: |-
  {{ query('vars', *(query('varnames', '^vm_volume__.*') | sort)) | select }}
vm_interfaces: |-
  {{ query('vars', *(query('varnames', '^vm_interface__.*') | sort)) | select }}

vm_image_variant: genericcloud
# Uses variables computed by 25-apt-calculated.yaml.
vm_image_url:
  http://cloud.debian.org/images/cloud/{{ apt__distro_name }}/latest/debian-{{
    apt__distro_ver }}-{{ vm_image_variant }}-amd64.qcow2

vm_volume__00_root:
  dev: /dev/vg0/vm-{{ inventory_hostname_short }}-root
  target: vda
  type: block
  size: 10G
  format: raw
  mount: ~  # Partitioned device.

_host_iface_prefix: |-
  {% set _len = ('vm-%s-en0' % vm_name) | length %}
  {{ 'vm-%s' % (vm_name if _len <= 15 else vm_name[:15 - _len]) }}
vm_interface__00_pubbr:
  type: bridge
  mac: '{{ pubnet_hwaddr }}'
  source:
    dev: vmbr0
  target:
    dev: '{{ _host_iface_prefix }}-en0'
vm_interface__01_privbr:
  type: bridge
  mac: '{{ privnet_hwaddr }}'
  source:
    dev: vmbr1
  target:
    dev: '{{ _host_iface_prefix }}-en1'

# Construct complete VM definition.
libvirt__vm_def: |-
  {{
    vm_default_params |
    combine(vm_params or {}) |
    combine({
      'name': vm_name,
      'volumes': vm_volumes,
      'interfaces': vm_interfaces,
    })
  }}
